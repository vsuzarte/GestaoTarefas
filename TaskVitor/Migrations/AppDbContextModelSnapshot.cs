// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskVitor.Data;

#nullable disable

namespace TaskVitor.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("TaskVitor.Models.Classificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Classificacoes", (string)null);
                });

            modelBuilder.Entity("TaskVitor.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("TaskVitor.Models.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projetos", (string)null);
                });

            modelBuilder.Entity("TaskVitor.Models.Responsavel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Responsaveis", (string)null);
                });

            modelBuilder.Entity("TaskVitor.Models.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClassificacaoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProjetoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ResponsavelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClassificacaoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProjetoId");

                    b.HasIndex("ResponsavelId");

                    b.ToTable("Tarefas", (string)null);
                });

            modelBuilder.Entity("TaskVitor.Models.Tarefa", b =>
                {
                    b.HasOne("TaskVitor.Models.Classificacao", "Classificacao")
                        .WithMany("Tarefas")
                        .HasForeignKey("ClassificacaoId");

                    b.HasOne("TaskVitor.Models.Cliente", "Cliente")
                        .WithMany("Tarefas")
                        .HasForeignKey("ClienteId");

                    b.HasOne("TaskVitor.Models.Projeto", null)
                        .WithMany("Tarefas")
                        .HasForeignKey("ProjetoId");

                    b.HasOne("TaskVitor.Models.Responsavel", "Responsavel")
                        .WithMany("Tarefas")
                        .HasForeignKey("ResponsavelId");

                    b.Navigation("Classificacao");

                    b.Navigation("Cliente");

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("TaskVitor.Models.Classificacao", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("TaskVitor.Models.Cliente", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("TaskVitor.Models.Projeto", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("TaskVitor.Models.Responsavel", b =>
                {
                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
